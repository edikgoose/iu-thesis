@book{google_sre,
    title = {Site Reliability Engineering: How Google Runs Production Systems},
    author = {Beyer, Betsy and Jones, Chris and Petoff, Jennifer and Murphy, Niall Richard},
    year = {2016},
    publisher = {"O'Reilly Media, Inc."}
}

@book{microservices,
    title={Microservices patterns: with examples in Java},
    author={Richardson, Chris},
    year={2018},
    publisher={Simon and Schuster}
}



@inproceedings{load_testing_tips,
    author = {Chen, Tse-Hsun and Syer, Mark D. and Shang, Weiyi and Jiang, Zhen Ming and Hassan, Ahmed E. and Nasser, Mohamed and Flora, Parminder},
    booktitle = {2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)},
    title = {Analytics-Driven Load Testing: An Industrial Experience Report on Load Testing of Large-Scale Systems},
    year = {2017},
    volume = {},
    number = {},
    pages = {243-252},
    keywords = {Testing;Radiation detectors;Software systems;Guidelines;Production;Industries;Aggregates;load testing;test analysis;performance testing;mining software repositories},
    doi = {10.1109/ICSE-SEIP.2017.26} }

@inproceedings{load_testing_tools,
    author = {Abbas, Rabiya and Sultan, Zainab and Bhatti, Shahid Nazir},
    booktitle = {2017 International Conference on Communication Technologies (ComTech)},
    title = {Comparative analysis of automated load testing tools: Apache JMeter, Microsoft Visual Studio (TFS), LoadRunner, Siege},
    year = {2017},
    volume = {},
    number = {},
    pages = {39-44},
    doi = {10.1109/COMTECH.2017.8065747} }

@inproceedings{reliability_patterns,
    author = {Mendonca, Nabor C. and Aderaldo, Carlos M. and Camara, Javier and Garlan, David},
    booktitle = {2020 IEEE International Conference on Software Architecture (ICSA)},
    title = {Model-Based Analysis of Microservice Resiliency Patterns},
    year = {2020},
    volume = {},
    number = {},
    pages = {114-124},
    doi = {10.1109/ICSA47634.2020.00019}
}

@inproceedings{devops,
    author = {Jabbari, Ramtin and bin Ali, Nauman and Petersen, Kai and Tanveer, Binish},
    booktitle = {Proceedings of the Scientific Workshop Proceedings of XP2016},
    title = {What is DevOps? A Systematic Mapping Study on Definitions and Practices},
    year = {2016},
    pages= {1-11},
    doi = {10.1145/2962695.2962707},
    isbn = {9781450341349},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
}


@incollection{normal_forms,
    abstract = {ABSTRACT
Formal database semantics has concentrated on dependency constraints, such as functional and multivalued dependencies, and on normal forms for relations. Unfortunately, much of this work has been inaccessible to researchers outside this field, due to the unfamiliar formalism in which the work is couched. In addition, the lack of a single set of definitions has confused the relationships among certain results. This paper is intended to serve the two-fold purpose of introducing the main issues and theorems of formal database semantics to the uninitiated, and to clarify the terminology of the field.},
    address = {San Francisco (CA)},
    author = {Catriel Beeri and Philip A. Bernstein and Nathan Goodman},
    booktitle = {Readings in Artificial Intelligence and Databases},
    doi = {https://doi.org/10.1016/B978-0-934613-53-8.50035-2},
    editor = {John Mylopolous and Michael Brodie},
    isbn = {978-0-934613-53-8},
    pages = {468-479},
    publisher = {Morgan Kaufmann},
    title = {A sophisticate's introduction to database normalization theory},
    url = {https://www.sciencedirect.com/science/article/pii/B9780934613538500352},
    year = {1989},
}



@article{load_testing_base,
    title = {Load testing of web sites},
    author = {Menasc'e, Daniel A},
    journal = {IEEE internet computing},
    volume = {6},
    number = {4},
    pages = {70--74},
    year = {2002},
    publisher = {IEEE}
}

@article{load_testing_tools_rus,
    author = {S. Myasnikov. and D. Namiot},
    date = {2018},
    issn = {1993-8314, 2687-0649},
    journaltitle = {Prikladnaya informatik},
    keywords = {Автоматизация Тестирования, Нагрузочное Тестирование, Отказоустойчивость, Производительность},
    langid = {russian},
    number = {1},
    pages = {92--102},
    title = {On load testing tools},
    url = {https://elibrary.ru/item.asp?id=32601827},
    urldate = {2023-11-14},
    volume = {13},
    bdsk-url-1 = {https://elibrary.ru/item.asp?id=32601827}
}

@article{circuit_breaker,
    abstract = {Resilience is one of the important issues in the implementation of microservices architecture, and to handle it, various approaches and solutions are available. A circuit breaker is a solution to handle failure in microservices and is now widely implemented both as a library and as a pattern embedded in the service and client modules. Despite the widespread use of circuit breaker, the research on circuit breaker is relatively less than research subject on other microservices area, or in microservices resiliency. This article provides an overview of recent research in circuit breaker, map the research subject, and find the opportunities for future research. The research is conducted using a systematic map study but the results focused on extract the knowledge and find important keywords to build a conceptual overview of the research field circuit breaker. The result shows that there are five categories of research subjects which are concept, strategy, management, implementation, and products. After exploring each category, we can propose the opportunity in enhancing the use of circuit breaker in microservices architecture, by explore the potential implementation of proxy circuit breaker.},
    author = {{Falahah} and Surendro, Kridanto and Sunindyo, Wikan Danar},
    date = {2021-02},
    doi = {10.1088/1757-899X/1077/1/012065},
    issn = {1757-899X},
    journaltitle = {{IOP} Conf. Ser.: Mater. Sci. Eng.},
    langid = {english},
    note = {Publisher: {IOP} Publishing},
    number = {1},
    pages = {012065},
    shorttitle = {Circuit Breaker in Microservices},
    title = {Circuit Breaker in Microservices: State of the Art and Future Prospects},
    url = {https://dx.doi.org/10.1088/1757-899X/1077/1/012065},
    urldate = {2023-11-14},
    volume = {1077},
    bdsk-url-1 = {https://dx.doi.org/10.1088/1757-899X/1077/1/012065}
}



@report{http,
    abstract = {The Hypertext Transfer Protocol ({HTTP}) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of {HTTP}, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier ({URI}) schemes. This document updates {RFC} 3864 and obsoletes {RFCs} 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.},
    author = {Fielding, Roy T. and Nottingham, Mark and Reschke, Julian},
    date = {2022-06},
    doi = {10.17487/RFC9110},
    institution = {Internet Engineering Task Force},
    note = {Num Pages: 194},
    number = {{RFC} 9110},
    title = {{HTTP} Semantics},
    type = {Request for Comments},
    url = {https://datatracker.ietf.org/doc/rfc9110},
    urldate = {2024-05-12},
    bdsk-url-1 = {https://datatracker.ietf.org/doc/rfc9110},
    bdsk-url-2 = {https://doi.org/10.17487/RFC9110}
}

@report{yaml,
    abstract = {This document registers the application/yaml media type and the +yaml structured syntax suffix with {IANA}. Both identify document components that are serialized according to the {YAML} specification.},
    author = {Polli, Roberto and Wilde, Erik and Aro, Eemeli},
    date = {2024-02},
    doi = {10.17487/RFC9512},
    institution = {Internet Engineering Task Force},
    note = {Num Pages: 13},
    number = {{RFC} 9512},
    title = {{YAML} Media Type},
    type = {Request for Comments},
    url = {https://datatracker.ietf.org/doc/rfc9512},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://datatracker.ietf.org/doc/rfc9512},
    bdsk-url-2 = {https://doi.org/10.17487/RFC9512}
}



@software{yandex_tank_api,
    date = {2023-05-10},
    keywords = {load-testing, yandex-tank, tank, tank-api},
    author = {Yandex},
    rights = {{MIT}},
    version = {1.0.0},
    title = {Yandex.Tank {API}},
    url = {https://github.com/yandex-load/yandex-tank-api},
    urldate = {2023-11-08},
}

@software{yandex_tank,
    abstract = {Load and performance benchmark tool},
    date = {2023-11-08},
    keywords = {framework, load-testing, performance, performance-test, python},
    author = {Yandex},
    rights = {{LGPL}-2.1},
    version = {1.11.3},
    title = {Yandex Tank},
    url = {https://github.com/yandex/yandex-tank},
    urldate = {2023-11-09},
}

@software{phantom,
    abstract = {I/O engine with some modules},
    date = {2023-09-12},
    author = {Yandex},
    rights = {{LGPL}-2.1},
    version = {1.14.0},
    title = {Phantom},
    url = {https://github.com/yandex-load/phantom},
    urldate = {2023-11-14},
    year = {2023},
}

@software{siege,
    abstract = {Siege is an http load tester and benchmarking utility},
    author = {Fulmer, Jeff},
    date = {2024-05-09},
    rights = {{GPL}-3.0},
    version = {4.1.5},
    title = {Siege},
    url = {https://github.com/JoeDog/siege},
    urldate = {2024-05-09},
    bdsk-url-1 = {https://github.com/JoeDog/siege} }

@software{circuitbreaker_lib,
    rights = {{OSI} Approved :: {BSD} License},
    shorttitle = {circuitbreaker},
    title = {circuitbreaker: Python Circuit Breaker pattern implementation},
    url = {https://github.com/fabfuel/circuitbreaker},
    author = {Fuelling, Fabian},
    version = {2.0.0},
    urldate = {2024-03-21},
    bdsk-url-1 = {https://github.com/fabfuel/circuitbreaker}
}

@software{consul,
    abstract = {Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.},
    date = {2024-06-13},
    keywords = {api-gateway, consul, ecs, kubernetes, service-discovery, service-mesh, vault},
    version = {1.19.0},
    author = {{HashiCorp}},
    title = {Consul},
    url = {https://github.com/hashicorp/consul},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/hashicorp/consul}
}

@software{gatling,
    abstract = {Modern Load Testing as Code},
    date = {2024-06-13},
    keywords = {automation, gatling, java, load-testing, loadtesting, netty, scala},
    author = {Gatling},
    rights = {Apache-2.0},
    version = {3.11.3},
    title = {Gatling},
    url = {https://github.com/gatling/gatling},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/gatling/gatling}
}

@software{resilience4j,
    abstract = {Resilience4j is a fault tolerance library designed for Java8 and functional programming},
    date = {2024-06-13},
    keywords = {bulkhead, circuitbreaker, metrics, rate-limiter, resilience, retry},
%    author = {Resilience4j},
    rights = {Apache-2.0},
    version = {2.2.0},
    title = {Resilience4j},
    url = {https://github.com/resilience4j/resilience4j},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/resilience4j/resilience4j}
}

@software{spring,
    abstract = {Spring Boot},
    date = {2024-06-13},
    keywords = {framework, java, spring, spring-boot},
    author = {Spring},
    rights = {Apache-2.0},
    title = {Spring-boot},
    version = {3.1},
    url = {https://github.com/spring-projects/spring-boot},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/spring-projects/spring-boot}
}

@software{influxdb,
    date = {2024-06-13},
    keywords = {database, go, influxdb, metrics, monitoring, react, rust, time-series},
    author = {{InfluxData}},
    rights = {Apache-2.0},
    title = {InfluxDB},
    version = {1.10.7},
    url = {https://github.com/influxdata/influxdb},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/influxdata/influxdb}
}

@software{jmeter,
    abstract = {Apache {JMeter} open-source load testing tool for analyzing and measuring the performance of a variety of services},
    date = {2024-06-12},
    keywords = {java, performance, test},
    author = {The Apache Software Foundation},
    rights = {Apache-2.0},
    title = {Jmeter},
    url = {https://github.com/apache/jmeter},
    urldate = {2024-06-13},
}

@software{docker_compose,
    abstract = {Define and run multi-container applications with Docker},
    date = {2024-06-13},
    keywords = {docker, docker-compose, go, golang, orchestration},
    author = {Docker},
    version = {2.27.1},
    rights = {Apache-2.0},
    title = {Docker Compose},
    url = {https://github.com/docker/compose},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/docker/compose}
}

@software{vaadin,
    abstract = {Vaadin 6, 7, 8   is a Java framework for modern Java web applications.},
    date = {2024-06-10},
    keywords = {java, vaadin, vaadin-framework, web-application-framework},
    title = {Vaadin},
    version = {8.25.2},
    url = {https://github.com/vaadin/framework},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/vaadin/framework}
}

@software{grafana,
    abstract = {The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, {InfluxDB}, Postgres and many more.},
    date = {2024-06-13},
    keywords = {alerting, analytics, business-intelligence, dashboard, data-visualization, elasticsearch, go, grafana, hacktoberfest, influxdb, metrics, monitoring, mysql, postgres, prometheus},
    author = {Grafana Labs},
    rights = {{AGPL}-3.0},
    version = {10.2.7},
    title = {Grafana},
    url = {https://github.com/grafana/grafana},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/grafana/grafana}
}

@software{gradle,
    abstract = {Adaptable, fast automation for all},
    date = {2024-06-13},
    rights = {Apache-2.0},
    title = {Gradle},
    version = {8.8.0},
    url = {https://github.com/gradle/gradle},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/gradle/gradle}
}

@software{hibernate,
    abstract = {Hibernate's core Object/Relational Mapping functionality - hibernate/hibernate-orm},
    date = {2024-06-10},
    author = {Hibernate},
    version = {6.4.9},
    shorttitle = {Hibernate-orm},
    title = {Hibernate-orm},
    url = {https://github.com/hibernate/hibernate-orm},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/hibernate/hibernate-orm}
}

@software{kotlin,
    abstract = {The Kotlin Programming Language. . Contribute to {JetBrains}/kotlin development by creating an account on {GitHub}.},
    date = {2024-06-10},
    author = {{JetBrains}},
    version = {2.0.0},
    title = {Kotlin},
    url = {https://github.com/JetBrains/kotlin},
    urldate = {2024-06-13},
}

@software{postgresql,
    date = {2024-06-10},
    publisher = {postgres},
    title = {Postgres},
    version = {12},
    url = {https://github.com/postgres/postgres},
    urldate = {2024-06-13},
    bdsk-url-1 = {https://github.com/postgres/postgres}
}

@online{docker_start,
    abstract = {Get started with the Docker basics in this comprehensive overview, You'll learn about containers, images, and how to containerize your first application.},
    date = {0200},
    langid = {english},
    title = {Docker Documentation},
    url = {https://docs.docker.com/get-started/},
    urldate = {2023-11-14},
    bdsk-url-1 = {https://docs.docker.com/get-started/}
}

@online{overload,
    title = {Overload {\textbar} A performance analytics service},
    url = {https://overload.yandex.net/},
    urldate = {2024-05-12},
    year = {2024},
    bdsk-url-1 = {https://overload.yandex.net/}
}

@online{consul_watches,
    abstract = {Watches monitor the key/value ({KV}) store, services, nodes, health checks, and events for updates. When a watch detects a change, it invokes a handler that can call an {HTTP} endpoint or run an executable. Learn how to configure watches to dynamically respond to changes in Consul.},
    langid = {english},
    title = {Watches Overview and Reference},
    url = {https://developer.hashicorp.com/consul/docs/dynamic-app-config/watches},
    year = {2024},
    urldate = {2024-05-11},
    bdsk-url-1 = {https://developer.hashicorp.com/consul/docs/dynamic-app-config/watches}
}

@online{yandex_tank_image,
    title = {Image Layer Details - yandex/yandex-tank:latest},
    url = {https://hub.docker.com/r/yandex/yandex-tank},
    urldate = {2024-05-12},
    year = {2024}
}

@online{blazemeter,
    title = {BlazeMeter},
    url = {https://www.blazemeter.com/},
    urldate = {2024-05-06},
    year = {2024},
    bdsk-url-1 = {https://www.blazemeter.com/}
}

@online{posix_errors,
    title = {POSIX Specification},
    url = {https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/},
    urldate = {2024-05-11},
    year = {2018},
    bdsk-url-1 = {https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/}
}

@online{one_second_article,
    title = {How One Second Could Cost Amazon \$1.6 Billion In Sales},
    url = {https://www.fastcompany.com/1825005/how-one-second-could-cost-amazon-16-billion-sales},
    urldate = {2023-11-09},
    year = {2012},
    bdsk-url-1 = {https://www.fastcompany.com/1825005/how-one-second-could-cost-amazon-16-billion-sales}
}